package client;

import oracle.jrockit.jfr.JFR;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.Frame;

public class RegisterGUI extends JFrame {

    private JPasswordField confpasswordField;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JPasswordField passwordField;
    private JButton registerButton;
    private JTextField usernameField;
    private Client client;

    public RegisterGUI(Client client) {
        this.client = client;

        initComponents();
    }


    /**
     * Generated by NetBeans
     */
    private void initComponents() {

        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        usernameField = new JTextField();
        passwordField = new JPasswordField();
        registerButton = new JButton();
        jLabel3 = new JLabel();
        confpasswordField = new JPasswordField();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Register");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        confpasswordField.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                confpasswordFieldKeyPressed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Password:");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(registerButton, GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                                        .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(jLabel2))
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(passwordField)
                                                                        .addComponent(usernameField))))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(confpasswordField)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(usernameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(confpasswordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(registerButton)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }




    private void registerAction(){
        String pass1 = passwordField.getText();
        String pass2 = confpasswordField.getText();
        String username = usernameField.getText();

        if (pass1.contentEquals(pass2)) {
            if (client.registerAccount(usernameField.getText(), passwordField.getText())) {
                JOptionPane.showMessageDialog(null, "Successfully Registered \n" +
                        "Please Login", "Registered", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Username Exist Already", "Unsuccessful Attempt", JOptionPane.ERROR_MESSAGE);
            }
        } else if (pass1.equals("") || pass2.equals("") || username.equals("")) {
            JOptionPane.showMessageDialog(null, "A Field is Empty", "Field Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Field(s) Error", "Field Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }





    // FIXME: 12/24/2016  DO NOT EXIT EVERYTHING IF THIS WINDOW IS CLOSED

    private void registerButtonActionPerformed(ActionEvent evt) {
        registerAction();
    }

    private void confpasswordFieldKeyPressed(KeyEvent evt) {
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            registerAction();
        }
    }

    private void formWindowClosed(java.awt.event.WindowEvent evt) {

    }
}
