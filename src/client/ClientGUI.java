package client;

import javax.swing.text.DefaultCaret;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class ClientGUI extends javax.swing.JFrame {


    private javax.swing.JTextPane chatBox;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField sendmessageTextField;
    public javax.swing.JList<String> userList;
    private Client client;

    public ClientGUI(Client client) {
        initComponents();  // Add buttons to screen etc.
        this.client = client;
    }

    /**
     * this updates the Chat Box area when called.
     */
    public void updateChat() {
        new Thread(new ClientThread(client, userList, chatBox)).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * Auto generated by NetBeans
     */
    private void initComponents() {
        sendmessageTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        chatBox = new javax.swing.JTextPane();

        DefaultCaret caret = (DefaultCaret)chatBox.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Window");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        userList.setToolTipText("");
        jScrollPane2.setViewportView(userList);

        chatBox.setEditable(false);
        jScrollPane3.setViewportView(chatBox);

        sendmessageTextField.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
                if ((e.getKeyCode() == KeyEvent.VK_ENTER)) {
                    String message = sendmessageTextField.getText();
                    sendmessageTextField.setText("");
                    client.sendToChatBox(message); // Send message to the server.
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sendmessageTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sendmessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sendButton))
                                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }

    // Send button logic
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String message = sendmessageTextField.getText();
        sendmessageTextField.setText("");
        client.sendToChatBox(message); // Send message to the server.

    }

    // Window closing
    private void formWindowClosed(java.awt.event.WindowEvent evt) {
        client.quitMessage();
        client.closeConnection();
    }

    public static void main(String[] args) {
        /* Set the Nimbus look and feel
        For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Client client = new Client();
                try {
                    client.Connect(); // <- Start the connection.
                } catch (Exception e) {
                    e.printStackTrace(); // FIXME: 12/19/2016
                }

                // Boot the GUI but don't show it unless user is logged in - Logic done in 'LoginGUI' class
                ClientGUI clientGUI = new ClientGUI(client);
                clientGUI.setLocationRelativeTo(null);
                clientGUI.setResizable(false);

                // Set logintoAccount screen as the default.
                LoginGUI loginGUIDialog = new LoginGUI(clientGUI, true, client);
                loginGUIDialog.setLocationRelativeTo(null);
                loginGUIDialog.setVisible(true);

            }
        });
    }
}
