package client;

import javax.swing.*;
import java.awt.event.KeyEvent;
import java.awt.Frame;

/**
 * Created by Keno on 12/18/2016.
 */

class LoginGUI extends JFrame {

    JButton loginButton;
    private JPasswordField passwordField;
    JButton registerButton;
    private JTextField usernameField;
    private String username;

    private Client client;
    private ClientGUI clientGUI;

    LoginGUI(Frame parent, boolean modal, Client client) {
        this.clientGUI = (ClientGUI) parent;
        this.client = client;
        initComponents();
        username = usernameField.getText();
    }

    /**
     * This method checks the username and password field and sends them to the server.
     */
    private void attemptLogin() {
        new Client().start();
            if (usernameField.getText().equals("") || passwordField.getText().equals("")) {
                return;
            }
            if(client.logintoAccount(usernameField.getText(), passwordField.getText())) {
                this.setVisible(false);
                clientGUI.setVisible(true);;
                clientGUI.updateChat();
            }else if(client.alreadyLogged){
                JOptionPane.showMessageDialog(null, "User already logged in. \nMake sure you're logged out of other device first.",
                        "User already Online", JOptionPane.ERROR_MESSAGE);
            }else{
            JOptionPane.showMessageDialog(this, "Login details invalid",
                    "Wrong Credentials", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Auto generated by netBeans.
     */
    private void initComponents() {

        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        usernameField = new JTextField();
        passwordField = new JPasswordField();
        loginButton = new JButton();
        registerButton = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }

            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(registerButton, GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                        .addComponent(loginButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(passwordField)
                                                        .addComponent(usernameField))))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(usernameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(loginButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(registerButton)
                                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }

    // LoginGUI Button
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        attemptLogin();
    }

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        RegisterGUI registerGUIDialog = new RegisterGUI(client);
        registerGUIDialog.setLocationRelativeTo(null);
        registerGUIDialog.setVisible(true);
    }

    String getUsername(){
        return username;
    }

    /**
     * When ENTER key is pressed then call the attempt logintoAccount method.
     */
    private void passwordFieldKeyPressed(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            attemptLogin();
        }
    }

    // Window closing
    private void formWindowClosed(java.awt.event.WindowEvent evt) {

    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        client.quitMessage();
        client.closeConnection();
    }

}